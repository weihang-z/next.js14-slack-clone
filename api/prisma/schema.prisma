// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String
  image     String?
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  workspaces Workspace[] @relation("UserWorkspaces")
  members   Member[]
  files     File[]
}

model Workspace {
  id        String   @id @default(cuid())
  name      String
  ownerId   String
  owner     User     @relation("UserWorkspaces", fields: [ownerId], references: [id])
  joinCode  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  members   Member[]
  channels  Channel[]
  conversations Conversation[]
  messages  Message[]
  reactions Reaction[]
  files     File[]
}

model Member {
  id          String    @id @default(cuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  workspaceId String
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  role        Role
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  messages    Message[]
  reactions   Reaction[]
  conversationsOne Conversation[] @relation("MemberOne")
  conversationsTwo Conversation[] @relation("MemberTwo")

  @@index([userId])
  @@index([workspaceId])
  @@unique([workspaceId, userId])
}

enum Role {
  admin
  member
}

model Channel {
  id          String    @id @default(cuid())
  name        String
  workspaceId String
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  messages    Message[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt

  @@index([workspaceId])
}

model Conversation {
  id           String    @id @default(cuid())
  workspaceId  String
  workspace    Workspace @relation(fields: [workspaceId], references: [id])
  memberOneId  String
  memberOne    Member    @relation("MemberOne", fields: [memberOneId], references: [id])
  memberTwoId  String
  memberTwo    Member    @relation("MemberTwo", fields: [memberTwoId], references: [id])
  messages     Message[]

  @@index([workspaceId])
}

model Message {
  id               String        @id @default(cuid())
  body             String
  imageUrl         String?
  memberId         String
  member           Member        @relation(fields: [memberId], references: [id])
  workspaceId      String
  workspace        Workspace     @relation(fields: [workspaceId], references: [id])
  channelId        String?
  channel          Channel?      @relation(fields: [channelId], references: [id])
  parentMessageId  String?
  parentMessage    Message?      @relation("Thread", fields: [parentMessageId], references: [id])
  thread           Message[]      @relation("Thread")
  conversationId   String?
  conversation     Conversation? @relation(fields: [conversationId], references: [id])
  updatedAtMs      BigInt?
  createdAt        DateTime      @default(now())

  reactions        Reaction[]
  files            File[]        @relation("MessageFiles")

  @@index([workspaceId])
  @@index([memberId])
  @@index([channelId])
  @@index([conversationId])
}

model Reaction {
  id          String   @id @default(cuid())
  workspaceId String
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  messageId   String
  message     Message  @relation(fields: [messageId], references: [id])
  memberId    String
  member      Member   @relation(fields: [memberId], references: [id])
  value       String

  @@index([workspaceId])
  @@index([messageId])
  @@index([memberId])
  @@unique([messageId, memberId, value])
}

model File {
  id          String   @id @default(cuid())
  filename    String
  mimeType    String
  size        Int
  key         String   @unique
  url         String
  uploadedBy  String
  workspaceId String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  uploader    User     @relation(fields: [uploadedBy], references: [id], onDelete: Cascade)
  workspace   Workspace? @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  
  messages    Message[] @relation("MessageFiles")
  
  @@index([uploadedBy])
  @@index([workspaceId])
  @@index([createdAt])
}